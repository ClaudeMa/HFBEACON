{"name":"Hfbeacon","tagline":"HF beacon library for arduino","body":"# Arduino HF multimodes beacon library#\r\nF4GOJ Christophe f4goj@free.fr<br>\r\nF4GOH Anthony f4goh@orange.fr\r\n\r\nOctober 2014\r\n\r\nUse this library freely.\r\n\r\n## Installation ##\r\nTo use the **HFBEACON** library:  \r\n- Go to https://github.com/F4GOJ/HFBEACON, click the [Download ZIP](https://github.com/F4GOJ/HFBEACON/archive/master.zip) button and save the ZIP file to a convenient location on your PC.\r\n- Uncompress the downloaded file.  This will result in a folder containing all the files for the library, that has a name that includes the branch name, usually **HFBEACON-master**.\r\n- Rename the folder to  **HFBEACON**.\r\n- Copy the renamed folder to the Arduino sketchbook\\libraries folder.\r\n\r\n\r\n## Usage notes ##\r\n\r\nThe **HFBEACON** library instantiates a **Beacon** object, the user does not need to do this.\r\n\r\nTo use the **HFBEACON** library, the AD9850SPI and SPI libraries must also be included.\r\n\r\n\r\n```c++\r\n#include <HFBEACON.h>  // http://github.com/F4GOJ/HFBEACON\r\n#include <AD9850SPI.h> // http://github.com/F4GOJ/AD9850SPI\r\n#include <SPI.h>       // http://arduino.cc/en/Reference/SPI (included with Arduino IDE)\r\n```\r\n\r\n## Functions : ##\r\n###rsidToggle(boolean rsidEnable)\r\n#####Description\r\nEnable RSiD in PSK, RTTY and Hell modes.\r\n#####Syntax\r\n`Beacon.rsidToggle(rsidEnable);`\r\n#####Parameters\r\n**rsidEnable :** true to enable or false to disable RSiD transmission (default is true) *(boolean)*\r\n#####Returns\r\nNone.\r\n#####Example\r\n```c++\r\nvoid setup(){\r\n Beacon.rsidToggle(false);\r\n}\r\n```\r\n###cwTx(long freqCw, char * stringCw, int cwWpm)\r\n#####Description\r\nTransmit a string in morse code.\r\n#####Syntax\r\n`Beacon.cwTx(freqCw, stringCw, cwWpm);`\r\n#####Parameters\r\n**freqCw :** Frequency of transmission. *(long)*<br>\r\n**stringCw :** String to transmit (not case sensitive) *(char array)*<br>\r\n**cwWpm :** Speed of transmission in words per minute.  *(int)*\r\n#####Returns\r\nNone.\r\n#####Example\r\n```c++\r\nvoid loop(){\r\n Beacon.cwTx(10141000, \"f4goj 30m bcn test f4goj\", 20);\r\n while(1);\r\n}\r\n```\r\n###bpsk31Tx(long freqBpsk31, char * stringBpsk31)\r\n#####Description\r\nTransmit a string in BPSK 31 mode.\r\n#####Syntax\r\n`Beacon.bpsk31Tx(freqBpsk31, stringBpsk31);`\r\n#####Parameters\r\n**freqBpsk31 :** Frequency of transmission. *(long)*<br>\r\n**stringBpsk31 :** String to transmit (not case sensitive) *(char array)*\r\n#####Returns\r\nNone.\r\n#####Example\r\n```c++\r\nvoid loop(){\r\n Beacon.bpsk31Tx(14070000, \"f4goj 20m beacon test f4goj\");\r\n while(1);\r\n}\r\n```\r\n###qpsk31Tx(long freqQpsk31, char * stringQpsk31)\r\n#####Description\r\nTransmit a string in QPSK 31 mode.\r\n#####Syntax\r\n`Beacon.qpsk31Tx(freqQpsk31, stringQpsk31);`\r\n#####Parameters\r\n**freqQpsk31 :** Frequency of transmission. *(long)*<br>\r\n**stringQpsk31 :** String to transmit (not case sensitive) *(char array)*\r\n#####Returns\r\nNone.\r\n#####Example\r\n```c++\r\nvoid loop(){\r\n Beacon.qpsk31Tx(14070000, \"f4goj 20m beacon test f4goj\");\r\n while(1);\r\n}\r\n```\r\n###bpsk63Tx(long freqBpsk63, char * stringBpsk63)\r\n#####Description\r\nTransmit a string in BPSK 63 mode.\r\n#####Syntax\r\n`Beacon.bpsk63Tx(freqBpsk63, stringBpsk63);`\r\n#####Parameters\r\n**freqBpsk63 :** Frequency of transmission. *(long)*<br>\r\n**stringBpsk63 :** String to transmit (not case sensitive) *(char array)*\r\n#####Returns\r\nNone.\r\n#####Example\r\n```c++\r\nvoid loop(){\r\n Beacon.bpsk63Tx(14070000, \"f4goj 20m beacon test f4goj\");\r\n while(1);\r\n}\r\n```\r\n###qpsk63Tx(long freqQpsk63, char * stringQpsk63)\r\n#####Description\r\nTransmit a string in QPSK 63 mode.\r\n#####Syntax\r\n`Beacon.qpsk63Tx(freqQpsk63, stringQpsk63);`\r\n#####Parameters\r\n**freqQpsk63 :** Frequency of transmission. *(long)*<br>\r\n**stringQpsk63 :** String to transmit (not case sensitive) *(char array)*\r\n#####Returns\r\nNone.\r\n#####Example\r\n```c++\r\nvoid loop(){\r\n Beacon.qpsk63Tx(14070000, \"f4goj 20m beacon test f4goj\");\r\n while(1);\r\n}\r\n```\r\n###bpsk125Tx(long freqBpsk125, char * stringBpsk125)\r\n#####Description\r\nTransmit a string in BPSK 125 mode.\r\n#####Syntax\r\n`Beacon.bpsk125Tx(freqBpsk125, stringBpsk125);`\r\n#####Parameters\r\n**freqBpsk125 :** Frequency of transmission. *(long)*<br>\r\n**stringBpsk125 :** String to transmit (not case sensitive) *(char array)*\r\n#####Returns\r\nNone.\r\n#####Example\r\n```c++\r\nvoid loop(){\r\n Beacon.bpsk125Tx(14070000, \"f4goj 20m beacon test f4goj\");\r\n while(1);\r\n}\r\n```\r\n###qpsk125Tx(long freqQpsk125, char * stringQpsk125)\r\n#####Description\r\nTransmit a string in QPSK 125 mode.\r\n#####Syntax\r\n`Beacon.qpsk125Tx(freqQpsk125, stringQpsk125);`\r\n#####Parameters\r\n**freqQpsk125 :** Frequency of transmission. *(long)*<br>\r\n**stringQpsk125 :** String to transmit (not case sensitive) *(char array)*\r\n#####Returns\r\nNone.\r\n#####Example\r\n```c++\r\nvoid loop(){\r\n Beacon.qpsk125Tx(14070000, \"f4goj 20m beacon test f4goj\");\r\n while(1);\r\n}\r\n```\r\n###rttyTx(long freqRtty, char * stringRtty)\r\n#####Description\r\nTransmit a string in RTTY 45 mode.\r\n#####Syntax\r\n`Beacon.rttyTx(freqRtty, stringRtty);`\r\n#####Parameters\r\n**freqRtty :** Frequency of transmission. *(long)*<br>\r\n**stringRtty :** String to transmit (not case sensitive) *(char array)*\r\n#####Returns\r\nNone.\r\n#####Example\r\n```c++\r\nvoid loop(){\r\n Beacon.rttyTx(14070000, \"f4goj 20m beacon test f4goj\");\r\n while(1);\r\n```\r\n###wsprTx(long freqWspr, char * callWsprTx, char * locWsprTx, char * powWsprTx)\r\n#####Description\r\nEncode callsign, locator, transmit power if not done and transmit them in WSPR-2.\r\n#####Syntax\r\n`Beacon.wsprTx(freqWspr, callWsprTx, locWsprTx, powWsprTx);`\r\n#####Parameters\r\n**freqWspr :** Frequency of transmission. *(long)*<br>\r\n**callWsprTx :** Callsign (not case sensitive) *(char array)*<br>\r\n**locWsprTx :** Locator (4 characters long, not case sensitive) *(char array)*<br>\r\n**powWsprTx :** Transmit power (in dBm) *(char array)*\r\n#####Returns\r\nNone.\r\n#####Example\r\n```c++\r\nvoid loop(){\r\n Beacon.wsprTx(10140131, \"f4goj\", \"in97\", \"33\");\r\n while(1);\r\n```\r\n###wsprEncode(char * callsign, char * locator, char * power)\r\n#####Description\r\nEncode callsign, locator, transmit power.\r\n#####Syntax\r\n`Beacon.wsprEncode(callsign, locator, power);`\r\n#####Parameters\r\n**callsign :** Callsign (not case sensitive) *(long)*<br>\r\n**locator :** Locator (4 characters long, not case sensitive) *(char array)*<br>\r\n**power :** Transmit power (in dBm) *(char array)*\r\n#####Returns\r\nUpdate wsprSymb[] and wsprSymbGen variables\r\n#####Example\r\n```c++\r\nvoid loop(){\r\n Beacon.wsprEncode(\"f4goj\", \"in97\", \"33\");\r\n while(1);\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}